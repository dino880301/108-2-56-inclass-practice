knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
install.packages("install.packages(c("googlesheets4"))")
install.packages("googlesheets4")
library(googlesheets4)
library(googlesheets4)
library(googlesheets4)
library(googlesheets4)
a <- 2
a = 2 # = 與 <-同義
a
3 -> b
b
b
<!-- ``` -->
my_108_total_credits <- 15
_108_total_credits <- 15
a <- 15 # 變數設定
b <- a # 呼叫a的值，用來設定變數b的值，相當於 b <- 15
knitr::opts_chunk$set(echo = TRUE)
char2 <- c("蔡英文","習近平","Donald Trump","蔡頭")
factor2 <- factor(char2)
levels(factor2)
sort(
str_sub(char2,1,1)
)
knitr::opts_chunk$set(echo = TRUE)
char1 <- c("Wild","Apple","Donald","May","Avocada")
factor1 <- factor(char1)
levels(factor1)
char2 <- c("蔡英文","習近平","Donald Trump","蔡頭")
factor2 <- factor(char2)
levels(factor2)
sort(
str_sub(char2,1,1)
)
Sys.getlocale("LC_COLLATE")
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
# 可排序類別資料：年齡層
covid19$年齡層 <-
factor(
covid19$年齡層,
ordered=TRUE
)
levels(covid19$縣市)
levels(covid19$性別)
levels(covid19$是否為境外移入)
covid19$年齡層
levels(covid19$年齡層)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
majors <- c("經濟學系","經濟學系","社會學系","社工系","經濟學系")
names <- c("小英", "小美", "大雄","阿華", "阿尼")
gender <- c("F","F","M","F","M")
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
pick_小新 <- example$name == "小新"
map(example, ~.x[pick_小新]) ->
data_selected
map(example, ~.x[pick_小新]) ->
data_selected
jsonlite::fromJSON("https://www.dropbox.com/s/6252gbdnv9owljm/dance.json?dl=1", simplifyDataFrame = F) -> dance
# 第一個dance表演名稱
dance[[1]]$title
# 第二個dance表演名稱
dance[[2]]$title
map(dance, ~.x$title) ->
list_titles
View(list_titles)
# 記載第一個表演的所有場次訊息
dance[[1]]$showInfo
str(dance[[1]]$showInfo)
# 計算第一個表演有幾個場次
length(dance[[1]]$showInfo)
# 計算第二個表演有幾個場次
length(dance[[2]]$showInfo)
map(dance,~length(.x$showInfo)) ->
list_numberOfShows
View(list_numberOfShows)
str(dance[[4]]$showInfo)
# 這個表演第1個場次的訊息
dance[[4]]$showInfo[[1]]$time
# 這個表演第2個場次的訊息
dance[[4]]$showInfo[[2]]$time
map(dance[[4]]$showInfo, ~ .x$time) ->
list_showTimes_dance4
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/67BB3C2B-E7D1-43A7-B872-61B2F082E11B?$format=json", simplifyDataFrame = F) ->
busRoutes
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
weather_next36hours$cwbopendata$dataset$location$weatherElement[[1]]$elementName
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
a <- 2
a = 2 # = 與 <-同義
a
3 -> b
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(stringr)
library(sjplop)
library(stringr)
install.packages(sjplop)
library(stringr)
install.packages("sjPlot")
